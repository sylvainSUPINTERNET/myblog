# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    acl:
        connection: default

    role_hierarchy:

        #ROLE_NAME (apparait dans le group de sonata menu) pour l'attriburtion
        # check us services.yml =>  admin.post par exemple == ROLE_ADMIN_ POST/CREATE/DELETE/UPDATE
        # https://stackoverflow.com/questions/14154505/how-to-use-roles-in-sonataadminbundle

        ROLE_UTILISATEUR:
        #DO NOTHING ONLY COMMENT ON POST  + SLUG POST IF CONNECTED (verif into twig)

         #Access to dashboard
            - ROLE_SONATA_STUFF # have no effect on the UI
            - ROLE_SONATA_ADMIN # with this role you have a nice navbar with search box
        #Post
            - ROLE_ADMIN_POST_GUEST

        #Comment
            - ROLE_ADMIN_COMMENT_GUEST

        #Category
            - ROLE_ADMIN_CATEGORY_GUEST

        ROLE_EDITOR:
          #Access to dashboard
            - ROLE_SONATA_STUFF # have no effect on the UI
            - ROLE_SONATA_ADMIN # with this role you have a nice navbar with search box
        #Post
            - ROLE_ADMIN_POST_STAFF
            - ROLE_ADMIN_POST_EDITOR

        #Comment
            - ROLE_ADMIN_COMMENT_STAFF
            - ROLE_ADMIN_COMMENT_EDITOR

        #Category
            - ROLE_ADMIN_CATEGORY_STAFF
            - ROLE_ADMIN_CATEGORY_EDITOR






        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented



    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:            /yab(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /yab/login
                use_forward:    false
                check_path:     /yab/login_check
                failure_path:   null
            logout:
                path:           /yab/logout
                target:         /yab/login
            anonymous:          true
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
                default_target_path: /

            logout:             true
            anonymous:          true

    access_control:
        # Admin login page needs to be accessed without credential
        - { path: ^/yab/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/yab/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/yab/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/yab/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/yab/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/yab/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

    acl:
        connection: default